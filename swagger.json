{
    "swagger": "2.0",
    "info": {
      "description": "This is a sample CRUD API for test",
      "version": "1.0.0",
      "title": "Node Test API",
      "contact": {
        "email": "pravincs72@gmail.com"
      },
      "license": {
        "name": "MIT"
      }
    },
    "host": "localhost:3000",
    "basePath": "/v1",
    "tags": [
      {
        "name": "Notes",
        "description": "Notes API Description"
      }
    ],
    "schemes": [
      "https",
      "http"
    ],
    "paths": {
      "/notes/create": {
        "post": {
          "tags": [
            "Notes"
          ],
          "summary": "Add a new Notes to the store",
          "description": "",
          "operationId": "addPet",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "note",
              "description": "",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Note"
              }
            }
          ],
          "responses": {
            "401": {
              "description": "Error"
            }
          },
          "security": [
            {
              "api_key": []
            }
          ]
        }
      },
      "/notes/update": {
        "put": {
          "tags": [
            "Notes"
          ],
          "summary": "Update an existing Notes",
          "description": "",
          "operationId": "updatePet",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "",
              "required": true,
              "schema": {
                "$ref": "#/definitions/NoteUpdate"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid ID supplied"
            }
          },
          "security": [
            {
              "api_key": []
            }
          ]
        },
        "/notes/delete": null,
        "delete": {
          "tags": [
            "Notes"
          ],
          "summary": "Deletes a Notes",
          "description": "",
          "operationId": "deletePet",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "",
              "required": true,
              "schema": {
                "$ref": "#/definitions/NoteDelete"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid ID supplied"
            }
          },
          "security": [
            {
              "api_key": []
            }
          ]
        }
      },
      "/notes": {
        "get": {
          "tags": [
            "Notes"
          ],
          "summary": "Finds Notes by User with Pagination",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Notes"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "error"
            }
          },
          "security": [
            {
              "api_key": []
            }
          ]
        }
      },
      "/signup": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Create user into the system",
          "description": "",
          "operationId": "signupUser",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Signup"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful"
            },
            "400": {
              "description": "error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Logs user into the system",
          "description": "",
          "operationId": "loginUser",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Login"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful get token"
            },
            "400": {
              "description": "Invalid username/password supplied"
            }
          }
        }
      }
    },
    "definitions": {
      "Note": {
        "type": "object",
        "properties": {
          "note": {
            "type": "string"
          }
        }
      },
      "NoteUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "note": {
            "type": "string"
          }
        }
      },
      "NoteDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Notes": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Signup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    },
    "securityDefinitions": {
      "api_key": {
        "type": "apiKey",
        "name": "x-access-token",
        "in": "header"
      }
    }
  }